name: docker-build

on:
  push:
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:

      - name: Get latest GitHub release
        id: get_release
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/netbootxyz/netboot.xyz/releases/latest | jq -r .tag_name)
          echo "Latest release: $LATEST_RELEASE"
          echo "release_tag=$LATEST_RELEASE" >> $GITHUB_OUTPUT

      - name: Check if Docker image with release tag exists
        id: check_docker
        run: |
          DOCKER_ACCESS_TOKEN=$(curl -s -X POST -H "Content-Type: application/json" -d '{"identifier": "${{ secrets.DOCKERHUB_USERNAME }}", "secret": "${{ secrets.DOCKERHUB_TOKEN }}"}' https://hub.docker.com/v2/auth/token | jq -r .access_token)
          EXISTS=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer $DOCKER_ACCESS_TOKEN" https://hub.docker.com/v2/namespaces/docker/repositories/lov432/netboot-boot-server/tags/${{ steps.get_release.outputs.release_tag }})

          echo "Docker image check returned: $EXISTS"
          if [ "$EXISTS" = "200" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up QEMU
        if: steps.check_docker.outputs.exists == 'false'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.check_docker.outputs.exists == 'false'
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: steps.check_docker.outputs.exists == 'false'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: steps.check_docker.outputs.exists == 'false'
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          build-args: RELEASE=${{ steps.get_release.outputs.release_tag }}
          push: true
          tags: |
            lov432/netboot-boot-server:${{ github.ref_name }}
            ${{ github.ref_name == 'master' && 'lov432/netboot-boot-server:latest' || '' }}
            lov432/netboot-boot-server:${{ steps.get_release.outputs.release_tag }}
            lov432/netboot-boot-server:${{ github.sha }}